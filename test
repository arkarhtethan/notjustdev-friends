import { Entypo } from "@expo/vector-icons";
import * as ImagePicker from 'expo-image-picker';
import { useState } from 'react';
import { Button, Image, KeyboardAvoidingView, StyleSheet, Text, TextInput, View } from 'react-native';
import { useSafeAreaInsets } from "react-native-safe-area-context";
const user = {
    id: "u1",
    image:
        "https://notjustdev-dummy.s3.us-east-2.amazonaws.com/avatars/vadim.jpg",
    name: "Vadim Savin",
};

const CreatePostScreen = () => {
    const [description, setDescription] = useState("");
    const [image, setImage] = useState(null);

    const insets = useSafeAreaInsets();

    const onSubmit = () => {
        console.log("On Submit")
        setDescription("")
    }

    const pickImage = async () => {
        let result = await ImagePicker.launchImageLibraryAsync({
            mediaTypes: ImagePicker.MediaTypeOptions.Images,
            allowsEditing: true,
            aspect: [4, 3],
            quality: 1,
        });

        console.log(result);

        if (!result.cancelled) {
            setImage(result.uri);
        }
        console.warn("Pick an image");
    };

    return (
        <KeyboardAvoidingView
            behavior= { Platform.OS === "ios" ? "padding" : "height" }
    style = { [styles.container, { marginBottom: insets.bottom }]}
    contentContainerStyle = {{ flex: 1 }
}
        >
    <View style={ styles.header }>
        <Image source={ { uri: user.profileImage } } style = { styles.image } />
            <Text style={ styles.name }> { user.name } < /Text>
                < Entypo
onPress = { pickImage }
name = "images"
size = { 24}
color = "limegreen"
style = { styles.icon }
    />
    </View>
    < TextInput
value = { description }
onChangeText = { setDescription }
placeholder = 'What is on your mind ?'
multiline
    />
    <Image source={ { uri: image } } style = { styles.image } />
        <View style={ styles.buttonContainer }>
            <Button onPress={ onSubmit } title = "Post" />
                </View>
                < /KeyboardAvoidingView>
    )
}

export default CreatePostScreen

const styles = StyleSheet.create({
    container: {
        flex: 1,
        width: "100%",
        padding: 10,
        paddingTop: 30,
    },
    header: {
        flexDirection: "row"
    },
    profileImage: {
        height: 40,
        width: 40,
        borderRadius: 30,
    },
    name: {
        fontWeight: "500"
    },
    buttonContainer: {
        marginTop: "auto"
    },
    icon: {
        marginLeft: "auto"
    },
    image: {
        width: "100%",
        aspectRatio: 1
    }
})